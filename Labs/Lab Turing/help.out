out.println("3");
out.println("S 0 _ _ -> S 0 > 0 > _ ^");
out.println("S 1 _ _ -> S 1 > 1 > _ ^");
out.println("S | _ _ -> WRITE_SECOND | > _ ^ _ ^");
out.println("S _ _ _ -> STRING_END _ ^ _ < _ ^");
out.println("WRITE_SECOND 0 _ _ -> WRITE_SECOND 0 > _ ^ 0 >");
out.println("WRITE_SECOND 1 _ _ -> WRITE_SECOND 1 > _ ^ 1 >");
out.println("WRITE_SECOND 2 _ _ -> DEBUG_HELPER _ ^ _ ^ _ ^");
out.println("WRITE_SECOND _ _ _ -> TO_LEFT_A _ ^ _ < _ <");
out.println("WRITE_SECOND | _ _ -> TO_LEFT_A | ^ _ < _ <");
out.println("WRITE_SECOND + _ _ -> DEBUG_HELPER + ^ _ ^ _ ^");
out.println("STRING_END _ 0 _ -> STRING_END _ ^ _ < _ ^");
out.println("STRING_END _ 1 _ -> STRING_END _ ^ _ < _ ^");
out.println("STRING_END _ _ _ -> TO_START _ < _ ^ _ ^");
out.println("TO_START 1 _ _ -> TO_START 1 < _ ^ _ ^");
out.println("TO_START 0 _ _ -> TO_START 0 < _ ^ _ ^");
out.println("TO_START | _ _ -> TO_START | < _ ^ _ ^");
out.println("TO_START _ _ _ -> GO_RIGHT_LEFT _ > _ ^ _ ^");
out.println("TO_START _ _ 0 -> TO_END _ > _ ^ 0 ^");
out.println("TO_START _ _ 1 -> TO_END _ > _ ^ 1 ^");
out.println("TO_LEFT_A _ 1 1 -> TO_LEFT_A _ ^ 1 < 1 <");
out.println("TO_LEFT_A _ 1 0 -> TO_LEFT_A _ ^ 1 < 0 <");
out.println("TO_LEFT_A _ 1 | -> TO_LEFT_A _ ^ 1 < | <");
out.println("TO_LEFT_A _ 1 _ -> TO_LEFT_A _ ^ 1 < _ <");
out.println("TO_LEFT_A _ 0 1 -> TO_LEFT_A _ ^ 0 < 1 <");
out.println("TO_LEFT_A _ 0 0 -> TO_LEFT_A _ ^ 0 < 0 <");
out.println("TO_LEFT_A _ 0 | -> TO_LEFT_A _ ^ 0 < | <");
out.println("TO_LEFT_A _ 0 _ -> TO_LEFT_A _ ^ 0 < _ <");
out.println("TO_LEFT_A 1 1 1 -> TO_LEFT_C _ ^ 1 < 1 <");
out.println("TO_LEFT_A 1 1 0 -> TO_LEFT_C _ ^ 1 < 0 <");
out.println("TO_LEFT_A 1 1 | -> TO_LEFT_C _ ^ 1 < | <");
out.println("TO_LEFT_A 1 1 _ -> TO_LEFT_C _ ^ 1 < _ <");
out.println("TO_LEFT_A 1 0 1 -> TO_LEFT_C _ ^ 0 < 1 <");
out.println("TO_LEFT_A 1 0 0 -> TO_LEFT_C _ ^ 0 < 0 <");
out.println("TO_LEFT_A 1 0 | -> TO_LEFT_C _ ^ 0 < | <");
out.println("TO_LEFT_A 1 0 _ -> TO_LEFT_C _ ^ 0 < _ <");
out.println("TO_LEFT_A _ _ 1 -> TO_LEFT_B _ ^ _ > 1 >");
out.println("TO_LEFT_A _ _ 0 -> TO_LEFT_B _ ^ _ > 0 >");
out.println("TO_LEFT_A _ _ | -> TO_LEFT_B _ ^ _ > | >");
out.println("TO_LEFT_A _ _ _ -> TO_LEFT_B _ ^ _ > _ >");
out.println("TO_LEFT_B _ 1 1 -> TO_LEFT_B _ ^ 1 < 1 <");
out.println("TO_LEFT_B _ 1 0 -> TO_LEFT_B _ ^ 1 < 0 <");
out.println("TO_LEFT_B _ 0 1 -> TO_LEFT_B _ ^ 0 < 1 <");
out.println("TO_LEFT_B _ 0 0 -> TO_LEFT_B _ ^ 0 < 0 <");
out.println("TO_LEFT_B _ | 1 -> TO_LEFT_B _ ^ | < 1 <");
out.println("TO_LEFT_B _ | 0 -> TO_LEFT_B _ ^ | < 0 <");
out.println("TO_LEFT_B _ _ 1 -> TO_LEFT_B _ ^ _ < 1 <");
out.println("TO_LEFT_B _ _ 0 -> TO_LEFT_B _ ^ _ < 0 <");
out.println("TO_LEFT_B 1 1 1 -> TO_LEFT_C _ ^ 1 < 1 <");
out.println("TO_LEFT_B 1 1 0 -> TO_LEFT_C _ ^ 1 < 0 <");
out.println("TO_LEFT_B 1 1 | -> TO_LEFT_C _ ^ 1 < | <");
out.println("TO_LEFT_B 1 1 _ -> TO_LEFT_C _ ^ 1 < _ <");
out.println("TO_LEFT_B 1 0 1 -> TO_LEFT_C _ ^ 0 < 1 <");
out.println("TO_LEFT_B 1 0 0 -> TO_LEFT_C _ ^ 0 < 0 <");
out.println("TO_LEFT_B 1 0 | -> TO_LEFT_C _ ^ 0 < | <");
out.println("TO_LEFT_B 1 0 _ -> TO_LEFT_C _ ^ 0 < _ <");
out.println("TO_LEFT_B _ _ _ -> COMPARE _ ^ _ > _ >");
out.println("TO_LEFT_B _ 1 _ -> COMPARE _ ^ 1 ^ _ ^");
out.println("TO_LEFT_B _ 0 _ -> COMPARE _ ^ 0 ^ _ ^");
out.println("TO_LEFT_A | 1 1 -> TO_LEFT_A | ^ 1 < 1 <");
out.println("TO_LEFT_A | 1 0 -> TO_LEFT_A | ^ 1 < 0 <");
out.println("TO_LEFT_A | 1 | -> TO_LEFT_A | ^ 1 < | <");
out.println("TO_LEFT_A | 1 _ -> TO_LEFT_A | ^ 1 < _ <");
out.println("TO_LEFT_A | 0 1 -> TO_LEFT_A | ^ 0 < 1 <");
out.println("TO_LEFT_A | 0 0 -> TO_LEFT_A | ^ 0 < 0 <");
out.println("TO_LEFT_A | 0 | -> TO_LEFT_A | ^ 0 < | <");
out.println("TO_LEFT_A | 0 _ -> TO_LEFT_A | ^ 0 < _ <");
out.println("TO_LEFT_A | _ 1 -> TO_LEFT_B | ^ _ > 1 >");
out.println("TO_LEFT_A | _ 0 -> TO_LEFT_B | ^ _ > 0 >");
out.println("TO_LEFT_A | _ | -> TO_LEFT_B | ^ _ > | >");
out.println("TO_LEFT_A | _ _ -> TO_LEFT_B | ^ _ > _ >");
out.println("TO_LEFT_A 1 1 1 -> TO_LEFT_D _ ^ 1 < 1 <");
out.println("TO_LEFT_A 1 1 0 -> TO_LEFT_D _ ^ 1 < 0 <");
out.println("TO_LEFT_A 1 1 | -> TO_LEFT_D _ ^ 1 < | <");
out.println("TO_LEFT_A 1 1 _ -> TO_LEFT_D _ ^ 1 < _ <");
out.println("TO_LEFT_A 1 0 1 -> TO_LEFT_D _ ^ 0 < 1 <");
out.println("TO_LEFT_A 1 0 0 -> TO_LEFT_D _ ^ 0 < 0 <");
out.println("TO_LEFT_A 1 0 | -> TO_LEFT_D _ ^ 0 < | <");
out.println("TO_LEFT_A 1 0 _ -> TO_LEFT_D _ ^ 0 < _ <");
out.println("TO_LEFT_B | 1 1 -> TO_LEFT_B | ^ 1 < 1 <");
out.println("TO_LEFT_B | 1 0 -> TO_LEFT_B | ^ 1 < 0 <");
out.println("TO_LEFT_B | 0 1 -> TO_LEFT_B | ^ 0 < 1 <");
out.println("TO_LEFT_B | 0 0 -> TO_LEFT_B | ^ 0 < 0 <");
out.println("TO_LEFT_B | | 1 -> TO_LEFT_B | ^ | < 1 <");
out.println("TO_LEFT_B | | 0 -> TO_LEFT_B | ^ | < 0 <");
out.println("TO_LEFT_B | _ 1 -> TO_LEFT_B | ^ _ < 1 <");
out.println("TO_LEFT_B | _ 0 -> TO_LEFT_B | ^ _ < 0 <");
out.println("TO_LEFT_B 1 1 1 -> TO_LEFT_D _ ^ 1 < 1 <");
out.println("TO_LEFT_B 1 1 0 -> TO_LEFT_D _ ^ 1 < 0 <");
out.println("TO_LEFT_B 1 1 | -> TO_LEFT_D _ ^ 1 < | <");
out.println("TO_LEFT_B 1 1 _ -> TO_LEFT_D _ ^ 1 < _ <");
out.println("TO_LEFT_B 1 0 1 -> TO_LEFT_D _ ^ 0 < 1 <");
out.println("TO_LEFT_B 1 0 0 -> TO_LEFT_D _ ^ 0 < 0 <");
out.println("TO_LEFT_B 1 0 | -> TO_LEFT_D _ ^ 0 < | <");
out.println("TO_LEFT_B 1 0 _ -> TO_LEFT_D _ ^ 0 < _ <");
out.println("TO_LEFT_B | _ _ -> COMPARE | ^ _ > _ >");
out.println("TO_LEFT_B | 1 _ -> COMPARE | ^ 1 ^ _ ^");
out.println("TO_LEFT_B | 0 _ -> COMPARE | ^ 0 ^ _ ^");
out.println("COMPARE _ 1 _ -> TO_RIGHT _ ^ 1 > _ >");
out.println("COMPARE _ 1 0 -> TO_RIGHT _ ^ 1 > 0 >");
out.println("TO_RIGHT _ 1 1 -> TO_RIGHT _ ^ 1 > 1 >");
out.println("TO_RIGHT _ 1 0 -> TO_RIGHT _ ^ 1 > 0 >");
out.println("TO_RIGHT _ 0 1 -> TO_RIGHT _ ^ 0 > 1 >");
out.println("TO_RIGHT _ 0 0 -> TO_RIGHT _ ^ 0 > 0 >");
out.println("TO_RIGHT _ 1 _ -> TO_RIGHT _ ^ 1 > _ >");
out.println("TO_RIGHT _ 0 _ -> TO_RIGHT _ ^ 0 > _ >");
out.println("TO_RIGHT _ _ 1 -> TO_RIGHT _ ^ _ > 1 >");
out.println("TO_RIGHT _ _ 0 -> TO_RIGHT _ ^ _ > 0 >");
out.println("TO_RIGHT _ _ _ -> WRITE_BACK_A _ < _ < _ <");
out.println("TO_LEFT 0 1 1 -> TO_LEFT _ ^ 1 > 1 >");
out.println("TO_LEFT 0 1 0 -> TO_LEFT _ ^ 1 > 0 >");
out.println("TO_LEFT 0 0 1 -> TO_LEFT _ ^ 0 > 1 >");
out.println("TO_LEFT 0 0 0 -> TO_LEFT _ ^ 0 > 0 >");
out.println("TO_LEFT 0 1 _ -> TO_LEFT _ ^ 1 > _ >");
out.println("TO_LEFT 0 0 _ -> TO_LEFT _ ^ 0 > _ >");
out.println("TO_LEFT 0 _ 1 -> TO_LEFT _ ^ _ > 1 >");
out.println("TO_LEFT 0 _ 0 -> TO_LEFT _ ^ _ > 0 >");
out.println("TO_LEFT 0 _ _ -> WRITE_BACK_A _ < _ < _ <");
out.println("TO_LEFT 1 1 1 -> TO_LEFT _ ^ 1 > 1 >");
out.println("TO_LEFT 1 1 0 -> TO_LEFT _ ^ 1 > 0 >");
out.println("TO_LEFT 1 0 1 -> TO_LEFT _ ^ 0 > 1 >");
out.println("TO_LEFT 1 0 0 -> TO_LEFT _ ^ 0 > 0 >");
out.println("TO_LEFT 1 1 _ -> TO_LEFT _ ^ 1 > _ >");
out.println("TO_LEFT 1 0 _ -> TO_LEFT _ ^ 0 > _ >");
out.println("TO_LEFT 1 _ 1 -> TO_LEFT _ ^ _ > 1 >");
out.println("TO_LEFT 1 _ 0 -> TO_LEFT _ ^ _ > 0 >");
out.println("TO_LEFT 1 _ _ -> WRITE_BACK_A _ < _ < _ <");
out.println("COMPARE | 1 _ -> TO_RIGHT | ^ 1 > _ >");
out.println("COMPARE | 1 0 -> TO_RIGHT | ^ 1 > 0 >");
out.println("TO_RIGHT | 1 1 -> TO_RIGHT | ^ 1 > 1 >");
out.println("TO_RIGHT | 1 0 -> TO_RIGHT | ^ 1 > 0 >");
out.println("TO_RIGHT | 0 1 -> TO_RIGHT | ^ 0 > 1 >");
out.println("TO_RIGHT | 0 0 -> TO_RIGHT | ^ 0 > 0 >");
out.println("TO_RIGHT | 1 _ -> TO_RIGHT | ^ 1 > _ >");
out.println("TO_RIGHT | 0 _ -> TO_RIGHT | ^ 0 > _ >");
out.println("TO_RIGHT | _ 1 -> TO_RIGHT | ^ _ > 1 >");
out.println("TO_RIGHT | _ 0 -> TO_RIGHT | ^ _ > 0 >");
out.println("TO_RIGHT | _ _ -> WRITE_BACK_A | < _ < _ <");
out.println("WRITE_BACK_A 1 0 1 -> WRITE_BACK_A 0 < _ < 1 ^");
out.println("WRITE_BACK_A 1 0 0 -> WRITE_BACK_A 0 < _ < 0 ^");
out.println("WRITE_BACK_A 1 0 | -> WRITE_BACK_A 0 < _ < | ^");
out.println("WRITE_BACK_A 1 0 _ -> WRITE_BACK_A 0 < _ < _ ^");
out.println("WRITE_BACK_A 0 0 1 -> WRITE_BACK_A 0 < _ < 1 ^");
out.println("WRITE_BACK_A 0 0 0 -> WRITE_BACK_A 0 < _ < 0 ^");
out.println("WRITE_BACK_A 0 0 | -> WRITE_BACK_A 0 < _ < | ^");
out.println("WRITE_BACK_A 0 0 _ -> WRITE_BACK_A 0 < _ < _ ^");
out.println("WRITE_BACK_A | 0 1 -> WRITE_BACK_A 0 < _ < 1 ^");
out.println("WRITE_BACK_A | 0 0 -> WRITE_BACK_A 0 < _ < 0 ^");
out.println("WRITE_BACK_A | 0 | -> WRITE_BACK_A 0 < _ < | ^");
out.println("WRITE_BACK_A | 0 _ -> WRITE_BACK_A 0 < _ < _ ^");
out.println("WRITE_BACK_A _ 0 1 -> WRITE_BACK_A 0 < _ < 1 ^");
out.println("WRITE_BACK_A _ 0 0 -> WRITE_BACK_A 0 < _ < 0 ^");
out.println("WRITE_BACK_A _ 0 | -> WRITE_BACK_A 0 < _ < | ^");
out.println("WRITE_BACK_A _ 0 _ -> WRITE_BACK_A 0 < _ < _ ^");
out.println("WRITE_BACK_A 1 1 1 -> WRITE_BACK_A 1 < _ < 1 ^");
out.println("WRITE_BACK_A 1 1 0 -> WRITE_BACK_A 1 < _ < 0 ^");
out.println("WRITE_BACK_A 1 1 | -> WRITE_BACK_A 1 < _ < | ^");
out.println("WRITE_BACK_A 1 1 _ -> WRITE_BACK_A 1 < _ < _ ^");
out.println("WRITE_BACK_A 0 1 1 -> WRITE_BACK_A 1 < _ < 1 ^");
out.println("WRITE_BACK_A 0 1 0 -> WRITE_BACK_A 1 < _ < 0 ^");
out.println("WRITE_BACK_A 0 1 | -> WRITE_BACK_A 1 < _ < | ^");
out.println("WRITE_BACK_A 0 1 _ -> WRITE_BACK_A 1 < _ < _ ^");
out.println("WRITE_BACK_A | 1 1 -> WRITE_BACK_A 1 < _ < 1 ^");
out.println("WRITE_BACK_A | 1 0 -> WRITE_BACK_A 1 < _ < 0 ^");
out.println("WRITE_BACK_A | 1 | -> WRITE_BACK_A 1 < _ < | ^");
out.println("WRITE_BACK_A | 1 _ -> WRITE_BACK_A 1 < _ < _ ^");
out.println("WRITE_BACK_A _ 1 1 -> WRITE_BACK_A 1 < _ < 1 ^");
out.println("WRITE_BACK_A _ 1 0 -> WRITE_BACK_A 1 < _ < 0 ^");
out.println("WRITE_BACK_A _ 1 | -> WRITE_BACK_A 1 < _ < | ^");
out.println("WRITE_BACK_A _ 1 _ -> WRITE_BACK_A 1 < _ < _ ^");
out.println("WRITE_BACK_A 1 _ 1 -> WRITE_BACK_B | < _ ^ 1 ^");
out.println("WRITE_BACK_A 1 _ 0 -> WRITE_BACK_B | < _ ^ 0 ^");
out.println("WRITE_BACK_A 1 _ | -> WRITE_BACK_B | < _ ^ | ^");
out.println("WRITE_BACK_A 1 _ _ -> WRITE_BACK_B | < _ ^ _ ^");
out.println("WRITE_BACK_A 0 _ 1 -> WRITE_BACK_B | < _ ^ 1 ^");
out.println("WRITE_BACK_A 0 _ 0 -> WRITE_BACK_B | < _ ^ 0 ^");
out.println("WRITE_BACK_A 0 _ | -> WRITE_BACK_B | < _ ^ | ^");
out.println("WRITE_BACK_A 0 _ _ -> WRITE_BACK_B | < _ ^ _ ^");
out.println("WRITE_BACK_A | _ 1 -> WRITE_BACK_B | < _ ^ 1 ^");
out.println("WRITE_BACK_A | _ 0 -> WRITE_BACK_B | < _ ^ 0 ^");
out.println("WRITE_BACK_A | _ | -> WRITE_BACK_B | < _ ^ | ^");
out.println("WRITE_BACK_A | _ _ -> WRITE_BACK_B | < _ ^ _ ^");
out.println("WRITE_BACK_A _ _ 1 -> WRITE_BACK_B | < _ ^ 1 ^");
out.println("WRITE_BACK_A _ _ 0 -> WRITE_BACK_B | < _ ^ 0 ^");
out.println("WRITE_BACK_A _ _ | -> WRITE_BACK_B | < _ ^ | ^");
out.println("WRITE_BACK_A _ _ _ -> WRITE_BACK_B | < _ ^ _ ^");
out.println("WRITE_BACK_B 1 1 0 -> WRITE_BACK_B 0 < 1 ^ _ <");
out.println("WRITE_BACK_B 1 0 0 -> WRITE_BACK_B 0 < 0 ^ _ <");
out.println("WRITE_BACK_B 1 | 0 -> WRITE_BACK_B 0 < | ^ _ <");
out.println("WRITE_BACK_B 1 _ 0 -> WRITE_BACK_B 0 < _ ^ _ <");
out.println("WRITE_BACK_B 0 1 0 -> WRITE_BACK_B 0 < 1 ^ _ <");
out.println("WRITE_BACK_B 0 0 0 -> WRITE_BACK_B 0 < 0 ^ _ <");
out.println("WRITE_BACK_B 0 | 0 -> WRITE_BACK_B 0 < | ^ _ <");
out.println("WRITE_BACK_B 0 _ 0 -> WRITE_BACK_B 0 < _ ^ _ <");
out.println("WRITE_BACK_B | 1 0 -> WRITE_BACK_B 0 < 1 ^ _ <");
out.println("WRITE_BACK_B | 0 0 -> WRITE_BACK_B 0 < 0 ^ _ <");
out.println("WRITE_BACK_B | | 0 -> WRITE_BACK_B 0 < | ^ _ <");
out.println("WRITE_BACK_B | _ 0 -> WRITE_BACK_B 0 < _ ^ _ <");
out.println("WRITE_BACK_B _ 1 0 -> WRITE_BACK_B 0 < 1 ^ _ <");
out.println("WRITE_BACK_B _ 0 0 -> WRITE_BACK_B 0 < 0 ^ _ <");
out.println("WRITE_BACK_B _ | 0 -> WRITE_BACK_B 0 < | ^ _ <");
out.println("WRITE_BACK_B _ _ 0 -> WRITE_BACK_B 0 < _ ^ _ <");
out.println("WRITE_BACK_B 1 1 1 -> WRITE_BACK_B 1 < 1 ^ _ <");
out.println("WRITE_BACK_B 1 0 1 -> WRITE_BACK_B 1 < 0 ^ _ <");
out.println("WRITE_BACK_B 1 | 1 -> WRITE_BACK_B 1 < | ^ _ <");
out.println("WRITE_BACK_B 1 _ 1 -> WRITE_BACK_B 1 < _ ^ _ <");
out.println("WRITE_BACK_B 0 1 1 -> WRITE_BACK_B 1 < 1 ^ _ <");
out.println("WRITE_BACK_B 0 0 1 -> WRITE_BACK_B 1 < 0 ^ _ <");
out.println("WRITE_BACK_B 0 | 1 -> WRITE_BACK_B 1 < | ^ _ <");
out.println("WRITE_BACK_B 0 _ 1 -> WRITE_BACK_B 1 < _ ^ _ <");
out.println("WRITE_BACK_B | 1 1 -> WRITE_BACK_B 1 < 1 ^ _ <");
out.println("WRITE_BACK_B | 0 1 -> WRITE_BACK_B 1 < 0 ^ _ <");
out.println("WRITE_BACK_B | | 1 -> WRITE_BACK_B 1 < | ^ _ <");
out.println("WRITE_BACK_B | _ 1 -> WRITE_BACK_B 1 < _ ^ _ <");
out.println("WRITE_BACK_B _ 1 1 -> WRITE_BACK_B 1 < 1 ^ _ <");
out.println("WRITE_BACK_B _ 0 1 -> WRITE_BACK_B 1 < 0 ^ _ <");
out.println("WRITE_BACK_B _ | 1 -> WRITE_BACK_B 1 < | ^ _ <");
out.println("WRITE_BACK_B _ _ 1 -> WRITE_BACK_B 1 < _ ^ _ <");
out.println("WRITE_BACK_B 1 1 _ -> GO_LEFT_ARR 1 ^ 1 ^ _ ^");
out.println("WRITE_BACK_B 1 0 _ -> GO_LEFT_ARR 1 ^ 0 ^ _ ^");
out.println("WRITE_BACK_B 1 | _ -> GO_LEFT_ARR 1 ^ | ^ _ ^");
out.println("WRITE_BACK_B 1 _ _ -> GO_LEFT_ARR 1 ^ _ ^ _ ^");
out.println("WRITE_BACK_B 0 1 _ -> GO_LEFT_ARR 0 ^ 1 ^ _ ^");
out.println("WRITE_BACK_B 0 0 _ -> GO_LEFT_ARR 0 ^ 0 ^ _ ^");
out.println("WRITE_BACK_B 0 | _ -> GO_LEFT_ARR 0 ^ | ^ _ ^");
out.println("WRITE_BACK_B 0 _ _ -> GO_LEFT_ARR 0 ^ _ ^ _ ^");
out.println("WRITE_BACK_B | 1 _ -> GO_LEFT_ARR | ^ 1 ^ _ ^");
out.println("WRITE_BACK_B | 0 _ -> GO_LEFT_ARR | ^ 0 ^ _ ^");
out.println("WRITE_BACK_B | | _ -> GO_LEFT_ARR | ^ | ^ _ ^");
out.println("WRITE_BACK_B | _ _ -> GO_LEFT_ARR | ^ _ ^ _ ^");
out.println("WRITE_BACK_B _ 1 _ -> GO_LEFT_ARR _ ^ 1 ^ _ ^");
out.println("WRITE_BACK_B _ 0 _ -> GO_LEFT_ARR _ ^ 0 ^ _ ^");
out.println("WRITE_BACK_B _ | _ -> GO_LEFT_ARR _ ^ | ^ _ ^");
out.println("WRITE_BACK_B _ _ _ -> GO_LEFT_ARR _ ^ _ ^ _ ^");
out.println("GO_LEFT_ARR 1 1 1 -> GO_LEFT_ARR 1 < 1 ^ 1 ^");
out.println("GO_LEFT_ARR 1 1 0 -> GO_LEFT_ARR 1 < 1 ^ 0 ^");
out.println("GO_LEFT_ARR 1 1 | -> GO_LEFT_ARR 1 < 1 ^ | ^");
out.println("GO_LEFT_ARR 1 1 _ -> GO_LEFT_ARR 1 < 1 ^ _ ^");
out.println("GO_LEFT_ARR 1 0 1 -> GO_LEFT_ARR 1 < 0 ^ 1 ^");
out.println("GO_LEFT_ARR 1 0 0 -> GO_LEFT_ARR 1 < 0 ^ 0 ^");
out.println("GO_LEFT_ARR 1 0 | -> GO_LEFT_ARR 1 < 0 ^ | ^");
out.println("GO_LEFT_ARR 1 0 _ -> GO_LEFT_ARR 1 < 0 ^ _ ^");
out.println("GO_LEFT_ARR 1 | 1 -> GO_LEFT_ARR 1 < | ^ 1 ^");
out.println("GO_LEFT_ARR 1 | 0 -> GO_LEFT_ARR 1 < | ^ 0 ^");
out.println("GO_LEFT_ARR 1 | | -> GO_LEFT_ARR 1 < | ^ | ^");
out.println("GO_LEFT_ARR 1 | _ -> GO_LEFT_ARR 1 < | ^ _ ^");
out.println("GO_LEFT_ARR 1 _ 1 -> GO_LEFT_ARR 1 < _ ^ 1 ^");
out.println("GO_LEFT_ARR 1 _ 0 -> GO_LEFT_ARR 1 < _ ^ 0 ^");
out.println("GO_LEFT_ARR 1 _ | -> GO_LEFT_ARR 1 < _ ^ | ^");
out.println("GO_LEFT_ARR 1 _ _ -> GO_LEFT_ARR 1 < _ ^ _ ^");
out.println("GO_LEFT_ARR 0 1 1 -> GO_LEFT_ARR 0 < 1 ^ 1 ^");
out.println("GO_LEFT_ARR 0 1 0 -> GO_LEFT_ARR 0 < 1 ^ 0 ^");
out.println("GO_LEFT_ARR 0 1 | -> GO_LEFT_ARR 0 < 1 ^ | ^");
out.println("GO_LEFT_ARR 0 1 _ -> GO_LEFT_ARR 0 < 1 ^ _ ^");
out.println("GO_LEFT_ARR 0 0 1 -> GO_LEFT_ARR 0 < 0 ^ 1 ^");
out.println("GO_LEFT_ARR 0 0 0 -> GO_LEFT_ARR 0 < 0 ^ 0 ^");
out.println("GO_LEFT_ARR 0 0 | -> GO_LEFT_ARR 0 < 0 ^ | ^");
out.println("GO_LEFT_ARR 0 0 _ -> GO_LEFT_ARR 0 < 0 ^ _ ^");
out.println("GO_LEFT_ARR 0 | 1 -> GO_LEFT_ARR 0 < | ^ 1 ^");
out.println("GO_LEFT_ARR 0 | 0 -> GO_LEFT_ARR 0 < | ^ 0 ^");
out.println("GO_LEFT_ARR 0 | | -> GO_LEFT_ARR 0 < | ^ | ^");
out.println("GO_LEFT_ARR 0 | _ -> GO_LEFT_ARR 0 < | ^ _ ^");
out.println("GO_LEFT_ARR 0 _ 1 -> GO_LEFT_ARR 0 < _ ^ 1 ^");
out.println("GO_LEFT_ARR 0 _ 0 -> GO_LEFT_ARR 0 < _ ^ 0 ^");
out.println("GO_LEFT_ARR 0 _ | -> GO_LEFT_ARR 0 < _ ^ | ^");
out.println("GO_LEFT_ARR 0 _ _ -> GO_LEFT_ARR 0 < _ ^ _ ^");
out.println("GO_LEFT_ARR | 1 1 -> GO_LEFT_ARR | < 1 ^ 1 ^");
out.println("GO_LEFT_ARR | 1 0 -> GO_LEFT_ARR | < 1 ^ 0 ^");
out.println("GO_LEFT_ARR | 1 | -> GO_LEFT_ARR | < 1 ^ | ^");
out.println("GO_LEFT_ARR | 1 _ -> GO_LEFT_ARR | < 1 ^ _ ^");
out.println("GO_LEFT_ARR | 0 1 -> GO_LEFT_ARR | < 0 ^ 1 ^");
out.println("GO_LEFT_ARR | 0 0 -> GO_LEFT_ARR | < 0 ^ 0 ^");
out.println("GO_LEFT_ARR | 0 | -> GO_LEFT_ARR | < 0 ^ | ^");
out.println("GO_LEFT_ARR | 0 _ -> GO_LEFT_ARR | < 0 ^ _ ^");
out.println("GO_LEFT_ARR | | 1 -> GO_LEFT_ARR | < | ^ 1 ^");
out.println("GO_LEFT_ARR | | 0 -> GO_LEFT_ARR | < | ^ 0 ^");
out.println("GO_LEFT_ARR | | | -> GO_LEFT_ARR | < | ^ | ^");
out.println("GO_LEFT_ARR | | _ -> GO_LEFT_ARR | < | ^ _ ^");
out.println("GO_LEFT_ARR | _ 1 -> GO_LEFT_ARR | < _ ^ 1 ^");
out.println("GO_LEFT_ARR | _ 0 -> GO_LEFT_ARR | < _ ^ 0 ^");
out.println("GO_LEFT_ARR | _ | -> GO_LEFT_ARR | < _ ^ | ^");
out.println("GO_LEFT_ARR | _ _ -> GO_LEFT_ARR | < _ ^ _ ^");
out.println("GO_LEFT_ARR _ 1 1 -> S _ > 1 ^ 1 ^");
out.println("GO_LEFT_ARR _ 1 0 -> S _ > 1 ^ 0 ^");
out.println("GO_LEFT_ARR _ 1 | -> S _ > 1 ^ | ^");
out.println("GO_LEFT_ARR _ 1 _ -> S _ > 1 ^ _ ^");
out.println("GO_LEFT_ARR _ 0 1 -> S _ > 0 ^ 1 ^");
out.println("GO_LEFT_ARR _ 0 0 -> S _ > 0 ^ 0 ^");
out.println("GO_LEFT_ARR _ 0 | -> S _ > 0 ^ | ^");
out.println("GO_LEFT_ARR _ 0 _ -> S _ > 0 ^ _ ^");
out.println("GO_LEFT_ARR _ | 1 -> S _ > | ^ 1 ^");
out.println("GO_LEFT_ARR _ | 0 -> S _ > | ^ 0 ^");
out.println("GO_LEFT_ARR _ | | -> S _ > | ^ | ^");
out.println("GO_LEFT_ARR _ | _ -> S _ > | ^ _ ^");
out.println("GO_LEFT_ARR _ _ 1 -> S _ > _ ^ 1 ^");
out.println("GO_LEFT_ARR _ _ 0 -> S _ > _ ^ 0 ^");
out.println("GO_LEFT_ARR _ _ | -> S _ > _ ^ | ^");
out.println("GO_LEFT_ARR _ _ _ -> S _ > _ ^ _ ^");
out.println("COMPARE _ _ 1 -> CLEAN _ ^ _ ^ 1 ^");
out.println("COMPARE _ 0 1 -> CLEAN _ ^ 0 ^ 1 ^");
out.println("CLEAN _ 1 1 -> CLEAN _ ^ 1 > 1 >");
out.println("CLEAN _ 1 0 -> CLEAN _ ^ 1 > 0 >");
out.println("CLEAN _ 0 1 -> CLEAN _ ^ 0 > 1 >");
out.println("CLEAN _ 0 0 -> CLEAN _ ^ 0 > 0 >");
out.println("CLEAN _ 1 _ -> CLEAN _ ^ 1 > _ >");
out.println("CLEAN _ 0 _ -> CLEAN _ ^ 0 > _ >");
out.println("CLEAN _ _ 1 -> CLEAN _ ^ _ > 1 >");
out.println("CLEAN _ _ 0 -> CLEAN _ ^ _ > 0 >");
out.println("CLEAN _ _ _ -> CLEAN_BACK _ ^ _ < _ <");
out.println("CLEAN 0 1 1 -> CLEAN_NUM 0 ^ 1 > 1 >");
out.println("CLEAN 0 1 0 -> CLEAN_NUM 0 ^ 1 > 0 >");
out.println("CLEAN 0 0 1 -> CLEAN_NUM 0 ^ 0 > 1 >");
out.println("CLEAN 0 0 0 -> CLEAN_NUM 0 ^ 0 > 0 >");
out.println("CLEAN 0 1 _ -> CLEAN_NUM 0 ^ 1 > _ >");
out.println("CLEAN 0 0 _ -> CLEAN_NUM 0 ^ 0 > _ >");
out.println("CLEAN 0 _ 1 -> CLEAN_NUM 0 ^ _ > 1 >");
out.println("CLEAN 0 _ 0 -> CLEAN_NUM 0 ^ _ > 0 >");
out.println("CLEAN 0 _ _ -> CLEAN_BACK 0 ^ _ < _ <");
out.println("CLEAN 0 1 1 -> CLEAN_NUM 1 ^ 1 > 1 >");
out.println("CLEAN 0 1 0 -> CLEAN_NUM 1 ^ 1 > 0 >");
out.println("CLEAN 0 0 1 -> CLEAN_NUM 1 ^ 0 > 1 >");
out.println("CLEAN 0 0 0 -> CLEAN_NUM 1 ^ 0 > 0 >");
out.println("CLEAN 0 1 _ -> CLEAN_NUM 1 ^ 1 > _ >");
out.println("CLEAN 0 0 _ -> CLEAN_NUM 1 ^ 0 > _ >");
out.println("CLEAN 0 _ 1 -> CLEAN_NUM 1 ^ _ > 1 >");
out.println("CLEAN 0 _ 0 -> CLEAN_NUM 1 ^ _ > 0 >");
out.println("CLEAN 0 _ _ -> CLEAN_BACK 1 ^ _ < _ <");
out.println("CLEAN_BACK _ 1 1 -> CLEAN_BACK _ ^ _ < _ <");
out.println("CLEAN_BACK _ 1 0 -> CLEAN_BACK _ ^ _ < _ <");
out.println("CLEAN_BACK _ 0 1 -> CLEAN_BACK _ ^ _ < _ <");
out.println("CLEAN_BACK _ 0 0 -> CLEAN_BACK _ ^ _ < _ <");
out.println("CLEAN_BACK _ 1 _ -> CLEAN_BACK _ ^ _ < _ <");
out.println("CLEAN_BACK _ 0 _ -> CLEAN_BACK _ ^ _ < _ <");
out.println("CLEAN_BACK _ _ 1 -> CLEAN_BACK _ ^ _ < _ <");
out.println("CLEAN_BACK _ _ 0 -> CLEAN_BACK _ ^ _ < _ <");
out.println("CLEAN_BACK _ _ _ -> GO_PREV _ < _ ^ _ ^");
out.println("CLEAN_BACK 0 1 1 -> CLEAN_BACK_NUM 0 ^ _ < _ <");
out.println("CLEAN_BACK 0 1 0 -> CLEAN_BACK_NUM 0 ^ _ < _ <");
out.println("CLEAN_BACK 0 0 1 -> CLEAN_BACK_NUM 0 ^ _ < _ <");
out.println("CLEAN_BACK 0 0 0 -> CLEAN_BACK_NUM 0 ^ _ < _ <");
out.println("CLEAN_BACK 0 1 _ -> CLEAN_BACK_NUM 0 ^ _ < _ <");
out.println("CLEAN_BACK 0 0 _ -> CLEAN_BACK_NUM 0 ^ _ < _ <");
out.println("CLEAN_BACK 0 _ 1 -> CLEAN_BACK_NUM 0 ^ _ < _ <");
out.println("CLEAN_BACK 0 _ 0 -> CLEAN_BACK_NUM 0 ^ _ < _ <");
out.println("CLEAN_BACK 0 _ _ -> GO_PREV _ < _ ^ _ ^");
out.println("CLEAN_BACK 1 1 1 -> CLEAN_BACK_NUM 1 ^ _ < _ <");
out.println("CLEAN_BACK 1 1 0 -> CLEAN_BACK_NUM 1 ^ _ < _ <");
out.println("CLEAN_BACK 1 0 1 -> CLEAN_BACK_NUM 1 ^ _ < _ <");
out.println("CLEAN_BACK 1 0 0 -> CLEAN_BACK_NUM 1 ^ _ < _ <");
out.println("CLEAN_BACK 1 1 _ -> CLEAN_BACK_NUM 1 ^ _ < _ <");
out.println("CLEAN_BACK 1 0 _ -> CLEAN_BACK_NUM 1 ^ _ < _ <");
out.println("CLEAN_BACK 1 _ 1 -> CLEAN_BACK_NUM 1 ^ _ < _ <");
out.println("CLEAN_BACK 1 _ 0 -> CLEAN_BACK_NUM 1 ^ _ < _ <");
out.println("CLEAN_BACK 1 _ _ -> GO_PREV _ < _ ^ _ ^");
out.println("COMPARE _ 1 1 -> COMPARE _ ^ 1 > 1 >");
out.println("COMPARE _ _ 0 -> COMPARE _ ^ _ > 0 >");
out.println("COMPARE _ 0 0 -> COMPARE _ ^ 0 > 0 >");
out.println("COMPARE _ 0 _ -> COMPARE _ ^ 0 > _ >");
out.println("COMPARE _ 0 0 -> COMPARE _ ^ 0 > 0 >");
out.println("COMPARE _ _ _ -> CLEAN_BACK _ ^ _ < _ <");
out.println("COMPARE | _ 1 -> CLEAN | ^ _ ^ 1 ^");
out.println("COMPARE | 0 1 -> CLEAN | ^ 0 ^ 1 ^");
out.println("CLEAN | 1 1 -> CLEAN | ^ 1 > 1 >");
out.println("CLEAN | 1 0 -> CLEAN | ^ 1 > 0 >");
out.println("CLEAN | 0 1 -> CLEAN | ^ 0 > 1 >");
out.println("CLEAN | 0 0 -> CLEAN | ^ 0 > 0 >");
out.println("CLEAN | 1 _ -> CLEAN | ^ 1 > _ >");
out.println("CLEAN | 0 _ -> CLEAN | ^ 0 > _ >");
out.println("CLEAN | _ 1 -> CLEAN | ^ _ > 1 >");
out.println("CLEAN | _ 0 -> CLEAN | ^ _ > 0 >");
out.println("CLEAN | _ _ -> CLEAN_BACK | ^ _ < _ <");
out.println("CLEAN_BACK | 1 1 -> CLEAN_BACK | ^ _ < _ <");
out.println("CLEAN_BACK | 1 0 -> CLEAN_BACK | ^ _ < _ <");
out.println("CLEAN_BACK | 0 1 -> CLEAN_BACK | ^ _ < _ <");
out.println("CLEAN_BACK | 0 0 -> CLEAN_BACK | ^ _ < _ <");
out.println("CLEAN_BACK | 1 _ -> CLEAN_BACK | ^ _ < _ <");
out.println("CLEAN_BACK | 0 _ -> CLEAN_BACK | ^ _ < _ <");
out.println("CLEAN_BACK | _ 1 -> CLEAN_BACK | ^ _ < _ <");
out.println("CLEAN_BACK | _ 0 -> CLEAN_BACK | ^ _ < _ <");
out.println("CLEAN_BACK | _ _ -> GO_PREV | < _ ^ _ ^");
out.println("COMPARE | 1 1 -> COMPARE | ^ 1 > 1 >");
out.println("COMPARE | _ 0 -> COMPARE | ^ _ > 0 >");
out.println("COMPARE | 0 0 -> COMPARE | ^ 0 > 0 >");
out.println("COMPARE | 0 _ -> COMPARE | ^ 0 > _ >");
out.println("COMPARE | 0 0 -> COMPARE | ^ 0 > 0 >");
out.println("COMPARE | _ _ -> CLEAN_BACK | ^ _ < _ <");
out.println("GO_PREV 1 1 1 -> GO_PREV 1 < 1 ^ 1 ^");
out.println("GO_PREV 1 1 0 -> GO_PREV 1 < 1 ^ 0 ^");
out.println("GO_PREV 1 1 | -> GO_PREV 1 < 1 ^ | ^");
out.println("GO_PREV 1 1 _ -> GO_PREV 1 < 1 ^ _ ^");
out.println("GO_PREV 1 0 1 -> GO_PREV 1 < 0 ^ 1 ^");
out.println("GO_PREV 1 0 0 -> GO_PREV 1 < 0 ^ 0 ^");
out.println("GO_PREV 1 0 | -> GO_PREV 1 < 0 ^ | ^");
out.println("GO_PREV 1 0 _ -> GO_PREV 1 < 0 ^ _ ^");
out.println("GO_PREV 1 | 1 -> GO_PREV 1 < | ^ 1 ^");
out.println("GO_PREV 1 | 0 -> GO_PREV 1 < | ^ 0 ^");
out.println("GO_PREV 1 | | -> GO_PREV 1 < | ^ | ^");
out.println("GO_PREV 1 | _ -> GO_PREV 1 < | ^ _ ^");
out.println("GO_PREV 1 _ 1 -> GO_PREV 1 < _ ^ 1 ^");
out.println("GO_PREV 1 _ 0 -> GO_PREV 1 < _ ^ 0 ^");
out.println("GO_PREV 1 _ | -> GO_PREV 1 < _ ^ | ^");
out.println("GO_PREV 1 _ _ -> GO_PREV 1 < _ ^ _ ^");
out.println("GO_PREV 0 1 1 -> GO_PREV 0 < 1 ^ 1 ^");
out.println("GO_PREV 0 1 0 -> GO_PREV 0 < 1 ^ 0 ^");
out.println("GO_PREV 0 1 | -> GO_PREV 0 < 1 ^ | ^");
out.println("GO_PREV 0 1 _ -> GO_PREV 0 < 1 ^ _ ^");
out.println("GO_PREV 0 0 1 -> GO_PREV 0 < 0 ^ 1 ^");
out.println("GO_PREV 0 0 0 -> GO_PREV 0 < 0 ^ 0 ^");
out.println("GO_PREV 0 0 | -> GO_PREV 0 < 0 ^ | ^");
out.println("GO_PREV 0 0 _ -> GO_PREV 0 < 0 ^ _ ^");
out.println("GO_PREV 0 | 1 -> GO_PREV 0 < | ^ 1 ^");
out.println("GO_PREV 0 | 0 -> GO_PREV 0 < | ^ 0 ^");
out.println("GO_PREV 0 | | -> GO_PREV 0 < | ^ | ^");
out.println("GO_PREV 0 | _ -> GO_PREV 0 < | ^ _ ^");
out.println("GO_PREV 0 _ 1 -> GO_PREV 0 < _ ^ 1 ^");
out.println("GO_PREV 0 _ 0 -> GO_PREV 0 < _ ^ 0 ^");
out.println("GO_PREV 0 _ | -> GO_PREV 0 < _ ^ | ^");
out.println("GO_PREV 0 _ _ -> GO_PREV 0 < _ ^ _ ^");
out.println("GO_PREV _ 1 1 -> S _ > 1 ^ 1 ^");
out.println("GO_PREV _ 1 0 -> S _ > 1 ^ 0 ^");
out.println("GO_PREV _ 1 | -> S _ > 1 ^ | ^");
out.println("GO_PREV _ 1 _ -> S _ > 1 ^ _ ^");
out.println("GO_PREV _ 0 1 -> S _ > 0 ^ 1 ^");
out.println("GO_PREV _ 0 0 -> S _ > 0 ^ 0 ^");
out.println("GO_PREV _ 0 | -> S _ > 0 ^ | ^");
out.println("GO_PREV _ 0 _ -> S _ > 0 ^ _ ^");
out.println("GO_PREV _ | 1 -> S _ > | ^ 1 ^");
out.println("GO_PREV _ | 0 -> S _ > | ^ 0 ^");
out.println("GO_PREV _ | | -> S _ > | ^ | ^");
out.println("GO_PREV _ | _ -> S _ > | ^ _ ^");
out.println("GO_PREV _ _ 1 -> S _ > _ ^ 1 ^");
out.println("GO_PREV _ _ 0 -> S _ > _ ^ 0 ^");
out.println("GO_PREV _ _ | -> S _ > _ ^ | ^");
out.println("GO_PREV _ _ _ -> S _ > _ ^ _ ^");
out.println("GO_PREV | 1 1 -> S | > 1 ^ 1 ^");
out.println("GO_PREV | 1 0 -> S | > 1 ^ 0 ^");
out.println("GO_PREV | 1 | -> S | > 1 ^ | ^");
out.println("GO_PREV | 1 _ -> S | > 1 ^ _ ^");
out.println("GO_PREV | 0 1 -> S | > 0 ^ 1 ^");
out.println("GO_PREV | 0 0 -> S | > 0 ^ 0 ^");
out.println("GO_PREV | 0 | -> S | > 0 ^ | ^");
out.println("GO_PREV | 0 _ -> S | > 0 ^ _ ^");
out.println("GO_PREV | | 1 -> S | > | ^ 1 ^");
out.println("GO_PREV | | 0 -> S | > | ^ 0 ^");
out.println("GO_PREV | | | -> S | > | ^ | ^");
out.println("GO_PREV | | _ -> S | > | ^ _ ^");
out.println("GO_PREV | _ 1 -> S | > _ ^ 1 ^");
out.println("GO_PREV | _ 0 -> S | > _ ^ 0 ^");
out.println("GO_PREV | _ | -> S | > _ ^ | ^");
out.println("GO_PREV | _ _ -> S | > _ ^ _ ^");
out.println("GO_RIGHT_LEFT 1 _ _ -> GO_RIGHT_LEFT 1 > _ ^ _ ^");
out.println("GO_RIGHT_LEFT 0 _ _ -> GO_RIGHT_LEFT 0 > _ ^ _ ^");
out.println("GO_RIGHT_LEFT | _ _ -> GO_RIGHT_LEFT | > _ ^ _ ^");
out.println("GO_RIGHT_LEFT _ _ _ -> GO_LEFT _ < _ ^ _ ^");
out.println("GO_LEFT 1 _ _ -> GO_LEFT 1 < _ ^ _ ^");
out.println("GO_LEFT 0 _ _ -> GO_LEFT 0 < _ ^ _ ^");
out.println("GO_LEFT | _ _ -> GO_LEFT | < _ ^ _ ^");
out.println("GO_LEFT _ _ _ -> AC _ < _ ^ _ ^");
